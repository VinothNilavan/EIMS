# Resolve react_native_pods.rb with node to allow for hoisting
require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip

platform :ios, min_ios_version_supported
prepare_react_native_project!

flipper_config = ENV['NO_FLIPPER'] == "1" ? FlipperConfiguration.disabled : FlipperConfiguration.enabled
linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end
#target 'CommonApp' do

abstract_target 'CommonAppCommonPods' do
  
    config = use_native_modules!

    use_react_native!(
      :path => config[:reactNativePath],
      :flipper_configuration => flipper_config,

      # An absolute path to your application root.
      :app_path => "#{Pod::Config.instance.installation_root}/.."
    )

    pod 'Firebase', :modular_headers => true
    pod 'FirebaseCore', :modular_headers => true
    pod 'FirebaseCoreInternal', :modular_headers => true
    pod 'GoogleUtilities', :modular_headers => true
    pod 'FirebaseCoreExtension', :modular_headers => true
    pod 'FirebaseInstallations', :modular_headers => true
    pod 'nanopb', :modular_headers => true
    pod 'GoogleDataTransport', :modular_headers => true

    pod 'react-native-splash-screen', :path => '../node_modules/react-native-splash-screen'

    pod 'RNSound', :path => '../node_modules/react-native-sound'

    pod 'BVLinearGradient', :path => '../node_modules/react-native-linear-gradient'

    pod 'react-native-orientation-locker', :path => '../node_modules/react-native-orientation-locker'

    pod 'RNVectorIcons', :path => '../node_modules/react-native-vector-icons'

    pod 'react-native-video', :path => '../node_modules/react-native-video'

    pod 'react-native-blob-util', :path => '../node_modules/react-native-blob-util'

    pod 'react-native-image-picker', :path => '../node_modules/react-native-image-picker'
    pod 'react-native-config', :path => '../node_modules/react-native-config'
    # For extensions without React dependencies
    pod 'react-native-config/Extension', :path => '../node_modules/react-native-config'
    

    target 'CommonApp' do
      end
    target 'CommonAppDev' do
      end
    target 'CommonAppStg' do
      end
    
    
    target 'CommonAppTests' do
      inherit! :complete
      # Pods for testing
    end
   use_flipper!()

    post_install do |installer|
      # https://github.com/facebook/react-native/blob/main/packages/react-native/scripts/react_native_pods.rb#L197-L202
      targets_to_skip_verification = [
            'lottie-ios',
            'lottie-react-native'
          ]
      installer.pods_project.targets.each do |target|
        if targets_to_skip_verification.include?(target.name)
            target.build_configurations.each do |config|
              config.build_settings.delete 'IPHONEOS_DEPLOYMENT_TARGET'
              config.build_settings['ONLY_ACTIVE_ARCH'] = 'NO'
              config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'YES'
              puts "Updating OTHER_SWIFT_FLAGS for target #{target.name} to include -no-verify-emitted-module-interface"

              # It's very important that the "$(inherited)" part is added, otherwise this will
              # overwrite all other flags and cause a whole separate set of issues
              config.build_settings['OTHER_SWIFT_FLAGS'] = '$(inherited) -no-verify-emitted-module-interface'
            end
            end
          end
      react_native_post_install(installer)
    end
  end


